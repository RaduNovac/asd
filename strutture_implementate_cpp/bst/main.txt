Albero albero;
    Nodo root, nodo_1, nodo_2, nodo_3, nodo_4, nodo_5, nodo_6;

    albero.root = &root;
    
    root.Key = 6;
    nodo_1.Key = 3;
    nodo_2.Key = 11;
    nodo_3.Key = 5;
    nodo_4.Key = 8;
    nodo_5.Key = 21;
    nodo_6.Key = 15;
    
    //Radice
    root.left = &nodo_1;
    root.right = &nodo_2;

    //Livello 1
    nodo_1.right = &nodo_3;
    nodo_1.p = &root;
    nodo_2.left = &nodo_4;
    nodo_2.right = &nodo_5;
    nodo_2.p = &root;

    //Livello 2
    nodo_5.left = &nodo_6;
    nodo_3.p = &nodo_1;
    nodo_4.p = &nodo_2;
    nodo_5.p = &nodo_2;

    //Livello 3
    nodo_6.p = &nodo_5;

    //visita(&root);

    Nodo *max = tree_maximum(&root);
    Nodo *min = tree_minimum(&root);

    cout << "Il massimo e': " << max -> Key << ", e il minimo e': " << min -> Key << endl;

    Nodo* succ = tree_successor(&nodo_2);

    cout << "Il successore del nodo con Key = " << nodo_2.Key << " e': " << succ -> Key << endl;

    Nodo* prec = tree_predecessor(&nodo_2);

    cout << "Il predecessore del nodo con Key = " << nodo_2.Key << " e': " << prec -> Key << endl;
    //Inserisco il nodo 9
    Nodo nuovo;
    nuovo.Key = 9;

    tree_insert(&root, nuovo);

    Nodo *x = tree_search(&root, 8);

    if(x != nullptr){
        cout << "Elemento " << x -> Key << " presente.\n" << endl;
    }
    else{
        cout << "Elemento cercato non presente.\n";
    }

    succ = tree_successor(x);

    cout << "Il successore del nodo con Key = " << x -> Key << " e': " << succ -> Key << endl;

    prec = tree_predecessor(&nodo_2);

    cout << "Il predecessore del nodo con Key = " << nodo_2.Key << " e': " << prec -> Key << endl;

    //Cancello il nodo 11
    tree_delete(albero.root, &nodo_2);

    //Verifico con succ e prec se il delete ha avuto l'effetto desiderato
    cout << "Post delete nodo 11\n";

    succ = tree_successor(&nodo_4);

    cout << "Il successore del nodo con Key = " << nodo_4.Key << " e': " << succ -> Key << endl;

    prec = tree_predecessor(&nodo_6);

    cout << "Il predecessore del nodo con Key = " << nodo_6.Key << " e': " << prec -> Key << endl;

    return 0;